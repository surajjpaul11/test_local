name: CI Test Automation

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run tests with Maven verify
        run: mvn clean verify -Dcucumber.options="--plugin json:target/cucumber-report.json --plugin html:target/cucumber-reports.html"

      - name: List generated files
        run: ls -al target

      - name: Check if Cucumber report exists
        run: |
          if [ -f "target/cucumber-reports.html" ]; then
            echo "Cucumber report generated successfully."
          else
            echo "Cucumber report not found!"
            exit 1
          fi

      # Deploy to GitHub Pages using GitHub Token for authentication
      - name: Deploy Cucumber Report to GitHub Pages
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages || git clone --branch=main https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages
          cd gh-pages
          if [ $(git branch --list gh-pages) ]; then
            echo "gh-pages branch exists."
          else
            echo "gh-pages branch does not exist, creating it."
            git checkout -b gh-pages
          fi
          git fetch origin gh-pages  # Fetch the latest changes from remote
          git reset --hard origin/gh-pages  # Force reset the local branch to match the remote
          git checkout gh-pages  # Explicitly checkout the gh-pages branch
          cp ../target/cucumber-reports.html index.html
          git add index.html
          git commit -m "Update Cucumber report"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages

      # Print the URL of the Cucumber Report hosted on GitHub Pages
      - name: Print the Cucumber Report URL
        run: |
          echo "Your Cucumber report is available at:"
          echo "https://surajjpaul11.github.io/dhs_local/"
